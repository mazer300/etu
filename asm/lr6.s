.data
    newline:    .asciz "\n"          # Строка для новой строки
    space:      .asciz " "           # Строка для пробела

    str_array:  .asciz "Array: "     # Строка для вывода "Array: "
    str_index:  .asciz "arr[4] + arr[2] + arr[1] = "  # Строка для вывода "arr[4] + arr[2] + arr[1] = "
    result:     .asciz "result = "   # Строка для вывода "result = "

    array: .word 0,0,0,0,0,0,0,0,0,0  # Массив из 10 элементов

    .equ a, 18                       # Константа a
    .equ b, 8                        # Константа b
    .equ c, 8                        # Константа c
    
    .equ threshold, 1000             # Константа threshold
    
.text
.globl main

main:
    # Определение переменных
    li s0, a              # Загрузка значения a в регистр s0
    li s1, b              # Загрузка значения b в регистр s1
    li s2, c              # Загрузка значения c в регистр s2
    add s3, s0, s1        # Сложение s0 и s1, результат в s3 (a+b)
    add s3, s3, s2        # Сложение s3 и s2, результат в s3 (a+b+c)
    
    la t5, array          # Загрузка адреса массива в регистр t5
    sw s3, 0(t5)          # Сохранение значения s3 в первый элемент массива
    
    sub s3, s3, s2        # Вычитание s2 из s3, результат в s3 (a+b)
    sub s3, s3, s2        # Вычитание s2 из s3, результат в s3 (a+b-c)
    
    li s0, 1              # Инициализация счетчика цикла в регистр s0
    li s1, 10             # Загрузка количества элементов массива (10) в регистр s1
init_array:
    lw t4, 0(t5)          # Загрузка элемента массива в регистр t4
    add t4, t4, s3        # Сложение t4 и s3, результат в t4
    sw t4, 4(t5)          # Сохранение значения t4 в следующий элемент массива
    addi t5, t5, 4        # Увеличение адреса на 4 (размер слова)
    addi s0, s0, 1        # Увеличение счетчика цикла на 1
    blt s0, s1, init_array  # Если счетчик меньше 10, переход на метку init_array

    # Вывод строки "Array: "
    la a0, str_array      # Загрузка адреса строки "Array: " в регистр a0
    li a7, 4              # Загрузка кода системного вызова для вывода строки (4) в регистр a7
    ecall                 # Вызов системного вызова для вывода строки

    # Вывод массива
    la t5, array          # Загрузка адреса начала массива в регистр t5
    li s0, 0              # Инициализация счетчика цикла в регистр s0
    li s1, 10             # Загрузка количества элементов массива (10) в регистр s1
print_array:
    lw a0, 0(t5)          # Загрузка элемента массива в регистр a0
    li a7, 1              # Загрузка кода системного вызова для вывода числа (1) в регистр a7
    ecall                 # Вызов системного вызова для вывода числа

    # Вывод пробела
    la a0, space          # Загрузка адреса строки пробела в регистр a0
    li a7, 4              # Загрузка кода системного вызова для вывода строки (4) в регистр a7
    ecall                 # Вызов системного вызова для вывода строки

    addi t5, t5, 4        # Увеличение адреса на 4 (размер слова)
    addi s0, s0, 1        # Увеличение счетчика цикла на 1
    blt s0, s1, print_array  # Если счетчик меньше 10, переход на метку print_array
    
    # Вывод новой строки
    la a0, newline        # Загрузка адреса строки новой строки в регистр a0
    li a7, 4              # Загрузка кода системного вызова для вывода строки (4) в регистр a7
    ecall                 # Вызов системного вызова для вывода строки

    # Вычисление выражения
    la t5, array          # Загрузка адреса начала массива в регистр t5
    lw s9, 16(t5)         # Загрузка элемента массива a[4] в регистр s9
    lw s1, 8(t5)          # Загрузка элемента массива a[2] в регистр s1
    lw s4, 4(t5)          # Загрузка элемента массива a[1] в регистр s4
    
    add s3, s9, s1        # Сложение s9 и s1, результат в s3
    add s3, s3, s4        # Сложение s3 и s4, результат в s3
    
    # Вывод строки "arr[4] + arr[2] + arr[1] = "
    la a0, str_index      # Загрузка адреса строки "arr[4] + arr[2] + arr[1] = " в регистр a0
    li a7, 4              # Загрузка кода системного вызова для вывода строки (4) в регистр a7
    ecall                 # Вызов системного вызова для вывода строки
    
    # Вывод arr[4] + arr[2] + arr[1]
    mv a0, s3             # Перемещение значения суммы из регистра s3 в регистр a0
    li a7, 1              # Загрузка кода системного вызова для вывода числа (1) в регистр a7
    ecall                 # Вызов системного вызова для вывода числа
    
    # Вывод новой строки
    la a0, newline        # Загрузка адреса строки новой строки в регистр a0
    li a7, 4              # Загрузка кода системного вызова для вывода строки (4) в регистр a7
    ecall                 # Вызов системного вызова для вывода строки
    
    # Вывод строки "result = "
    la a0, result         # Загрузка адреса строки "result = " в регистр a0
    li a7, 4              # Загрузка кода системного вызова для вывода строки (4) в регистр a7
    ecall                 # Вызов системного вызова для вывода строки
    
    li t1, threshold      # Загрузка значения threshold в регистр t1
    bgt s3, t1, if_branch  # Если сумма больше threshold, переход на метку if_branch
    
else_branch:
    lw a5, 24(t5)         # Загрузка элемента массива a[6] в регистр a5
    add a5, a5, s2        # Сложение a5 и s2, результат в a5
    
    # Вывод результата
    mv a0, a5             # Перемещение значения результата из регистра a5 в регистр a0
    li a7, 1              # Загрузка кода системного вызова для вывода числа (1) в регистр a7
    ecall                 # Вызов системного вызова для вывода числа
    
    j end                 # Переход на метку end

if_branch:
    lw s7, 20(t5)         # Загрузка элемента массива a[5] в регистр s7
    sub s7, s7, s9        # Вычитание s9 из s7, результат в s7
    
    # Вывод результата
    mv a0, s7             # Перемещение значения результата из регистра s7 в регистр a0
    li a7, 1              # Загрузка кода системного вызова для вывода числа (1) в регистр a7
    ecall                 # Вызов системного вызова для вывода числа
    
end:
    # Завершение программы
    li a7, 10             # Загрузка кода системного вызова для завершения программы (10) в регистр a7
    ecall                 # Вызов системного вызова для завершения программы